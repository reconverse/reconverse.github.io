[
  {
    "path": "posts/2021-07-13-introducing-incidence2/",
    "title": "Introducing incidence2",
    "description": "Compute, handle and visualise epicurves.",
    "author": [
      {
        "name": "Tim Taylor",
        "url": {}
      }
    ],
    "date": "2021-07-13",
    "categories": [],
    "contents": "\nIt’s been a few months since our first post, ‘Welcome to the reconverse’, and, coinciding with the release of version 1.2.0, we thought it a good time to introduce you to the incidence2 package (Taylor 2021b) for R (R Core Team 2021).\nBackground\nDuring a disease outbreak it is important to collect some basic information on cases in a line list; a data structure where each entry describes a unique individual in an epidemiological context. Line lists are typically in a tabular format where each row is an individual with a unique ID, meta-data describing the individual which are fixed in time (e.g., age, sex, occupation, disease outcome) and time-stamped measurements (e.g., date of onset, date of admission, date of disease outcome).\nTo better understand an outbreak, line lists are often aggregated to produce epidemic curves (epicurves); graphs representing the number of new cases over a given time interval (e.g. days, weeks, months). The process to convert a line list to an epicurve typically involves four stages:\nData cleaning\nTime standardisation\nAggregation\nVisualisation\nTo assist with the computing and visualisation of epicurves (stages 2 to 4), the incidence (Kamvar et al. 2019) package was created. Here the term incidence was used to refer to the underlying, aggregated data, not the rate of incidence. Whilst this original implementation worked well it did have some limitations:\nUsers were unable to group by more than one variable at a time.\nUsers were also unable to convert pre aggregated data in to the packages’ incidence class\nDate grouping was only possible using the functions provided within the package.\nincidence2 is a re-imagining of the original package, built to address these limitations.\nImplementation\nWith incidence2, incidence objects are constructed as a subclass of tibble (Müller and Wickham 2021), where the following class invariants1 hold true:\nthere is a single column representing the time index of the latter counts;\none or more columns representing counts of a time-stamped measurement;\nzero or more columns representing groups;\nzero or more columns representing other associated measurements; and\nwhen considering the time index and group columns, there must be no duplicate rows.\nThe names of the columns representing the time index, counts, groups and associated measurements are then stored as as attributes of the object.\nBy building incidence objects on tibbles (which themselves build upon data frames) we benefit from the rich support for these data structures that is present within both ‘base’ R and the wider package ecosystem.\nWhen constructing incidence objects input can be given as either line list or pre-aggregated data and users have the option to use an “opinionated” approach to date grouping (built on top of the grates package (Taylor 2021a)) or to specify there own date grouping function.\nHow to use\nExamples\nTo illustrate the main package functionality we give two simple examples. The first example of these uses synthetic line list data from the outbreaks package (Jombart et al. 2020) whilst the second example downloads some Covid-19 case data from the UK’s National Health Service via the covidregionaldata package (Palmer et al. 2021).\nRequired packages\n\n\nlibrary(incidence2)\nlibrary(outbreaks)         # for example 1\nlibrary(covidregionaldata) # for example 2 and 3\nlibrary(clock)             # for example 3\nlibrary(zoo)               # for example 3\n\n\n\nExample 1 - Line list data\n\n\n# get the linelist data\ndat <- ebola_sim_clean$linelist\n\n# a quick visualising the daily onsets\ndat |> incidence(date_of_onset) |> plot()\n\n\n\n# calculate the epiweek incidence across hospitals and plot\ndat |> \n  incidence(\n    date_index = date_of_onset,\n    groups = hospital,\n    interval = \"epiweek\",\n    na_as_group = FALSE\n  ) |> \n  print() |> \n  facet_plot(nrow = 3, color = \"white\")\n\n\nAn incidence object: 262 x 3\ndate range: [2014-W15] to [2015-W17]\ncases: 4373\ninterval: 1 (Sunday) week \n\n   date_index hospital                                     count\n       <yrwk> <fct>                                        <int>\n 1   2014-W15 Military Hospital                                1\n 2   2014-W16 Connaught Hospital                               1\n 3   2014-W17 other                                            3\n 4   2014-W18 Connaught Hospital                               1\n 5   2014-W18 Princess Christian Maternity Hospital (PCMH)     1\n 6   2014-W18 Rokupa Hospital                                  1\n 7   2014-W19 Connaught Hospital                               3\n 8   2014-W19 Military Hospital                                4\n 9   2014-W19 other                                            1\n10   2014-W19 Princess Christian Maternity Hospital (PCMH)     1\n# … with 252 more rows\n\n\nExample 2 - Pre-aggregated data\n\n\n# get the data and filter out the nations\ndat <- get_regional_data(country = \"UK\", verbose = FALSE)\nnations <- c(\"England\", \"Northern Ireland\", \"Scotland\", \"Wales\")\ndat <- subset(dat, !region %in% nations)\n\n# calculate iso-weekly new cases across regions and plot\ndat |> \n  incidence(\n    date_index = date,\n    counts = cases_new,\n    groups = region,\n    interval = \"isoweek\",\n    na_as_group = FALSE\n  ) |> \n  print() |> \n  facet_plot(angle = 45, n.breaks = 6)\n\n\nAn incidence object: 693 x 3\ndate range: [2020-W05] to [2021-W28]\ncases_new: 4440175\ninterval: 1 (Monday) week \n\n   date_index region                   cases_new\n       <yrwk> <chr>                        <dbl>\n 1   2020-W05 East Midlands                    0\n 2   2020-W05 East of England                  0\n 3   2020-W05 London                           0\n 4   2020-W05 North East                       0\n 5   2020-W05 North West                       0\n 6   2020-W05 South East                       0\n 7   2020-W05 South West                       0\n 8   2020-W05 West Midlands                    0\n 9   2020-W05 Yorkshire and The Humber         1\n10   2020-W06 East Midlands                    0\n# … with 683 more rows\n\n\nFinal thoughts\nHopefully this short post gave you a taster of what incidence2 is about and why it is useful. For more information, including details on manipulating incidence objects, customizing the default plots, and using custom functions for date grouping, I recommend consulting the vignettes distributed with the package:\nvignette(\"Introduction\", package = \"incidence2\")\nvignette(\"handling_incidence_objects\", package = \"incidence2\")\nvignette(\"customizing_incidence_plots\", package = \"incidence2\")\nvignette(\"alternative_date_groupings\", package = \"incidence2\")\n\n\n\nJombart, Thibaut, Simon Frost, Pierre Nouvellet, Finlay Campbell, and Bertrand Sudre. 2020. Outbreaks: A Collection of Disease Outbreak Data. https://CRAN.R-project.org/package=outbreaks.\n\n\nKamvar, Zhian N., Jun Cai, Juliet R. C. Pulliam, Jakob Schumacher, and Thibaut Jombart. 2019. “Epidemic Curves Made Easy Using the R Package Incidence.” F1000Research 8 (January): 139. https://doi.org/10.12688/f1000research.18002.1.\n\n\nMüller, Kirill, and Hadley Wickham. 2021. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nPalmer, Joseph, Katharine Sherratt, Richard Martin-Nielsen, Jonnie Bevan, Hamish Gibbs, Sebastian Funk, and Sam Abbott. 2021. “Covidregionaldata: Subnational Data for Covid-19 Epidemiology.” Journal of Open Source Software 6 (62): 3290. https://doi.org/10.5281/zenodo.3957539.\n\n\nR Core Team. 2021. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nTaylor, Tim. 2021a. Grates: Grouped Date Classes. https://CRAN.R-project.org/package=grates.\n\n\n———. 2021b. Incidence2: Compute, Handle and Plot Incidence of Dated Events. https://CRAN.R-project.org/package=incidence2.\n\n\nstructural information that must remain true for an object to maintain its class when operated on↩︎\n",
    "preview": "posts/2021-07-13-introducing-incidence2/introducing-incidence2_files/figure-html5/example1-1.png",
    "last_modified": "2021-07-13T13:38:21+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-03-09-welcome-to-the-reconverse/",
    "title": "Welcome to the reconverse",
    "description": "A coherent ecosystem  of R packages for outbreak analytics.",
    "author": [
      {
        "name": "Thibaut Jombart",
        "url": "https://thibautjombart.netlify.app/"
      },
      {
        "name": "Tim Taylor",
        "url": {}
      }
    ],
    "date": "2021-03-09",
    "categories": [],
    "contents": "\nMembers of the R Epidemics Consortium have, for many years, been creating resources and software that could be used to inform the response to disease outbreaks, health emergencies and humanitarian crises. During this time, as well as providing training materials, running workshops and having members deployed to the field to help with data analytics, a variety of R packages have been created to enable analysts to quickly solve the problems they have (e.g. epicontacts, epiestim, incidence).\nSince the early days of RECON, the landscape of packages for the analysis of epidemics has grown, evolved and diversified, benefiting from feedback and contributions from our members as well as other groups. While such organic growth was needed and resulted in overall improvements of available tools, it has also led to a less consistent software landscape, with several packages overlapping or duplicating efforts, limited interoperability, and varying coding and development standards. Being aware that fragmented software landscapes can be the bane of data scientists (e.g. Excoffier and Heckel 2006), we realise there is also benefit to having a coherent and composable set of packages for users. The reconverse aims to address this. Much like the tidyverse is “an opinionated collection of R packages designed for data science”, the reconverse aims to be an opinionated ecosystem of packages for Outbreak Analytics.\nCompleting the reconverse will take years, and we intend for our first steps in this long journey to be taken carefully. However, we are not starting this journey empty-handed. With years of experience developing packages and extensive feedback from a wide range of users, our roadmap is unfolding with increasing clarity. Over the coming months we will be introducing some of the packages we view as the building blocks of the reconverse. In these exciting times, your input, feedback, criticisms, requests, and contributions will be more valuable than ever, as they will be instrumental in shaping the future of the reconverse – making it your reconverse.\nExciting times and challenges are ahead of us, and we are looking forward to taking you on board this epic journey.\n\n\n\nExcoffier, Laurent, and Gerald Heckel. 2006. “Computer Programs for Population Genetics Data Analysis: A Survival Guide.” Nature Reviews Genetics 7 (10): 745–58. https://doi.org/10.1038/nrg1904.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-08T22:27:55+01:00",
    "input_file": {}
  }
]
